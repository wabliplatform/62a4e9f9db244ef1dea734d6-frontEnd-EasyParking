/**
 * TempApi
 * This is a sample openApi document
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: lampralexandros@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Parkinglot model module.
 * @module model/Parkinglot
 * @version 1.0.0
 */
class Parkinglot {
    /**
     * Constructs a new <code>Parkinglot</code>.
     * @alias module:model/Parkinglot
     * @param rating {Number} 
     * @param distanceToDestination {String} 
     * @param parkingLotName {String} 
     * @param parkingLotAddress {String} 
     * @param parkingLotPrice {Number} 
     * @param rentingType {String} 
     */
    constructor(rating, distanceToDestination, parkingLotName, parkingLotAddress, parkingLotPrice, rentingType) { 
        
        Parkinglot.initialize(this, rating, distanceToDestination, parkingLotName, parkingLotAddress, parkingLotPrice, rentingType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, rating, distanceToDestination, parkingLotName, parkingLotAddress, parkingLotPrice, rentingType) { 
        obj['Rating'] = rating;
        obj['DistanceToDestination'] = distanceToDestination;
        obj['ParkingLotName'] = parkingLotName;
        obj['ParkingLotAddress'] = parkingLotAddress;
        obj['ParkingLotPrice'] = parkingLotPrice;
        obj['RentingType'] = rentingType;
    }

    /**
     * Constructs a <code>Parkinglot</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Parkinglot} obj Optional instance to populate.
     * @return {module:model/Parkinglot} The populated <code>Parkinglot</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Parkinglot();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('Rating')) {
                obj['Rating'] = ApiClient.convertToType(data['Rating'], 'Number');
            }
            if (data.hasOwnProperty('DistanceToDestination')) {
                obj['DistanceToDestination'] = ApiClient.convertToType(data['DistanceToDestination'], 'String');
            }
            if (data.hasOwnProperty('ParkingLotName')) {
                obj['ParkingLotName'] = ApiClient.convertToType(data['ParkingLotName'], 'String');
            }
            if (data.hasOwnProperty('ParkingLotAddress')) {
                obj['ParkingLotAddress'] = ApiClient.convertToType(data['ParkingLotAddress'], 'String');
            }
            if (data.hasOwnProperty('ParkingLotPrice')) {
                obj['ParkingLotPrice'] = ApiClient.convertToType(data['ParkingLotPrice'], 'Number');
            }
            if (data.hasOwnProperty('RentingType')) {
                obj['RentingType'] = ApiClient.convertToType(data['RentingType'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} _id
 */
Parkinglot.prototype['_id'] = undefined;

/**
 * @member {Number} Rating
 */
Parkinglot.prototype['Rating'] = undefined;

/**
 * @member {String} DistanceToDestination
 */
Parkinglot.prototype['DistanceToDestination'] = undefined;

/**
 * @member {String} ParkingLotName
 */
Parkinglot.prototype['ParkingLotName'] = undefined;

/**
 * @member {String} ParkingLotAddress
 */
Parkinglot.prototype['ParkingLotAddress'] = undefined;

/**
 * @member {Number} ParkingLotPrice
 */
Parkinglot.prototype['ParkingLotPrice'] = undefined;

/**
 * @member {String} RentingType
 */
Parkinglot.prototype['RentingType'] = undefined;






export default Parkinglot;

